name: Integration Tests
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_call:
    inputs:
      pip_overrides:
        description: 'One-per-line PEP 508 specs to force (shared across demos; applied only if declared).'
        required: false
        type: string
        default: ""
      pip_constraints:
        description: 'One-per-line constraints (shared across demos; applied only if declared).'
        required: false
        type: string
        default: ""
      docker_overrides:
        description: 'One-per-line service=image[:tag] (shared across demos; applied only if declared).'
        required: false
        type: string
        default: ""
jobs:
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suite: [coffeeAGNTCY/coffee_agents/corto, coffeeAGNTCY/coffee_agents/lungo]

    defaults:
      run:
        working-directory: ${{ matrix.suite }}

    env:
      AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
      AZURE_OPENAI_API_VERSION: ${{ secrets.AZURE_OPENAI_API_VERSION }}
      AZURE_OPENAI_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_DEPLOYMENT }}
      AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      LLM_PROVIDER: ${{ secrets.LLM_PROVIDER }}
      LLM_STREAMING: ${{ secrets.LLM_STREAMING }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Set up uv
        uses: astral-sh/setup-uv@v6

      # Apply the uv overrides/constraints, filtered to only what's declared in this demo
      - name: Apply uv overrides/constraints (if applicable) — ${{ matrix.suite }}
        if: ${{ inputs.pip_overrides != '' || inputs.pip_constraints != '' }}
        uses: ./.github/actions/apply-uv-overrides
        with:
          project_dir: ${{ matrix.suite }}
          pip_overrides: ${{ inputs.pip_overrides }}
          pip_constraints: ${{ inputs.pip_constraints }}

      - name: Apply compose image overrides (if any) — ${{ matrix.suite }}
        if: ${{ inputs.docker_overrides != '' }}
        uses: ./.github/actions/apply-container-overrides
        with:
          project_dir: ${{ matrix.suite }}/
          compose_file: docker-compose.yaml
          docker_overrides: ${{ inputs.docker_overrides }}

      # Resolve & install
      - name: Resolve & install — ${{ matrix.suite }}
        run: |
          uv lock --upgrade
          uv sync --extra dev

      # Run tests
      - name: Run integration tests — ${{ matrix.suite }}
        run: uv run pytest -s
